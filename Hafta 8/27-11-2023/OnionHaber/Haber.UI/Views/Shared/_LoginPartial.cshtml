@using Haber.Domain.Entities;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        @if (await UserManager.IsInRoleAsync(user, "Admin"))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="AdminPanel" asp-controller="Home" asp-action="Index" title="Manage">Admin Paneline Git</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="UyePanel" asp-controller="Home" asp-action="Index" title="Manage">Uye Sayfasına Git</a>
            </li>
        }
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-action="Logout" asp-controller="Login" asp-area="" method="post">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-action="Register" asp-controller="Login">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-action="Login" asp-controller="Login">Login</a>
        </li>
    }
</ul>