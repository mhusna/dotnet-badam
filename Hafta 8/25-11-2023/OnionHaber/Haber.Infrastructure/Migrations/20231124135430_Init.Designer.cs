// <auto-generated />
using System;
using Haber.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Haber.Infrastructure.Migrations
{
    [DbContext(typeof(HaberContext))]
    [Migration("20231124135430_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Haber.Domain.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "176cfe25-b258-49a6-92d4-4ac86a89fc66",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "10f5e984-bb3b-4be8-990e-7aaf1163c952",
                            Name = "Uye",
                            NormalizedName = "UYE"
                        });
                });

            modelBuilder.Entity("Haber.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 2L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AD");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SOYAD");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Ad = "Cevdet",
                            ConcurrencyStamp = "802ab054-54bb-4099-9d5b-2c3a4eef5e39",
                            Email = "cevdet@deneme.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CEVDET@DENEME.COM",
                            NormalizedUserName = "CEVDO",
                            PasswordHash = "AQAAAAEAACcQAAAAEADZ6aFzCQ6+vWb0NilvD3Ci7q2K6BxFQIChRXZc5JTCJ9rZo1Fm2cC51fCEzKfoeA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a153fcd9-7f44-4288-a249-84fd61270536",
                            Soyad = "Korkmaz",
                            TwoFactorEnabled = false,
                            UserName = "Cevdo"
                        });
                });

            modelBuilder.Entity("Haber.Domain.Entities.Favori", b =>
                {
                    b.Property<int>("FavoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FAVORI_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriID"), 1L, 1);

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEME_TARIHI");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("GUNCELLEME_TARIHI");

                    b.Property<int>("HaberID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("HABER_ID");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KAYIT_DURUMU");

                    b.Property<DateTime>("SilmeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILME_TARIHI");

                    b.Property<int>("UserID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USER_ID");

                    b.HasKey("FavoriID");

                    b.HasIndex("HaberID");

                    b.HasIndex("UserID");

                    b.ToTable("FAVORILER", (string)null);
                });

            modelBuilder.Entity("Haber.Domain.Entities.Haber", b =>
                {
                    b.Property<int>("HaberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("HABER_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HaberID"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BASLIK");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DETAY");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEME_TARIHI");

                    b.Property<int>("GoruntulenmeSayisi")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GORUNTULENME_SAYISI");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("GUNCELLEME_TARIHI");

                    b.Property<int>("HaberEkleyenID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("HABER_EKLEYEN_ID");

                    b.Property<int>("KategoriID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KATEGORI_ID");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KAYIT_DURUMU");

                    b.Property<string>("ResimYolu")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RESIM_YOLU");

                    b.Property<DateTime>("SilmeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILME_TARIHI");

                    b.HasKey("HaberID");

                    b.HasIndex("HaberEkleyenID");

                    b.HasIndex("KategoriID");

                    b.ToTable("HABERLER", (string)null);
                });

            modelBuilder.Entity("Haber.Domain.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KATEGORI_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"), 5L, 1);

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEME_TARIHI");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("GUNCELLEME_TARIHI");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KATEGORI_ADI");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KAYIT_DURUMU");

                    b.Property<DateTime>("SilmeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILME_TARIHI");

                    b.HasKey("KategoriID");

                    b.ToTable("KATEGORILER", (string)null);

                    b.HasData(
                        new
                        {
                            KategoriID = 1,
                            EklemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuncellemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KategoriAdi = "Ekonomi",
                            KayitDurumu = 0,
                            SilmeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            KategoriID = 2,
                            EklemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuncellemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KategoriAdi = "Teknoloji",
                            KayitDurumu = 0,
                            SilmeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            KategoriID = 3,
                            EklemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuncellemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KategoriAdi = "Spor",
                            KayitDurumu = 0,
                            SilmeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            KategoriID = 4,
                            EklemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuncellemeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KategoriAdi = "Magazin",
                            KayitDurumu = 0,
                            SilmeTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Haber.Domain.Entities.Yorum", b =>
                {
                    b.Property<int>("YorumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YORUM_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YorumID"), 1L, 1);

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEME_TARIHI");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("GUNCELLEME_TARIHI");

                    b.Property<int>("HaberID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("HABER_ID");

                    b.Property<int>("KayitDurumu")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KAYIT_DURUMU");

                    b.Property<DateTime>("SilmeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILME_TARIHI");

                    b.Property<int>("UserID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USER_ID");

                    b.Property<string>("YorumIcerik")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("YORUM_ICERIK");

                    b.HasKey("YorumID");

                    b.HasIndex("HaberID");

                    b.HasIndex("UserID");

                    b.ToTable("YORUMLAR", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Haber.Domain.Entities.Favori", b =>
                {
                    b.HasOne("Haber.Domain.Entities.Haber", "Haber")
                        .WithMany("Favoriler")
                        .HasForeignKey("HaberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haber.Domain.Entities.AppUser", "User")
                        .WithMany("Favoriler")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Haber");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Haber.Domain.Entities.Haber", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppUser", "User")
                        .WithMany("Haberler")
                        .HasForeignKey("HaberEkleyenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haber.Domain.Entities.Kategori", "Kategori")
                        .WithMany("Haberler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Haber.Domain.Entities.Yorum", b =>
                {
                    b.HasOne("Haber.Domain.Entities.Haber", "Haber")
                        .WithMany("Yorumlar")
                        .HasForeignKey("HaberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haber.Domain.Entities.AppUser", "User")
                        .WithMany("Yorumlar")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Haber");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haber.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Haber.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Haber.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Haberler");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("Haber.Domain.Entities.Haber", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("Haber.Domain.Entities.Kategori", b =>
                {
                    b.Navigation("Haberler");
                });
#pragma warning restore 612, 618
        }
    }
}
